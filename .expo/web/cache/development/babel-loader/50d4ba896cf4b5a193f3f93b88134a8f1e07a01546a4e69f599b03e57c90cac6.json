{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar express = require('express');\nvar router = express.Router();\nvar Subject = require('../models/Subject');\nvar auth = require('../auth');\nrouter.post('/', auth.authenticateToken, function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    try {\n      var subject = new Subject(req.body);\n      yield subject.save();\n      res.status(201).json(subject);\n    } catch (error) {\n      res.status(500).json({\n        error: '서버 오류'\n      });\n    }\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.get('/', auth.authenticateToken, function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    try {\n      var subjects = yield Subject.find({\n        university: req.user.university\n      });\n      res.json(subjects);\n    } catch (error) {\n      res.status(500).json({\n        error: '서버 오류'\n      });\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","Subject","auth","post","authenticateToken","_ref","_asyncToGenerator","req","res","subject","body","save","status","json","error","_x","_x2","apply","arguments","get","_ref2","subjects","find","university","user","_x3","_x4","module","exports"],"sources":["C:/startcoding/tutoring-platform/routes/subjectRoutes.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Subject = require('../models/Subject');\r\nconst auth = require('../auth');\r\n\r\nrouter.post('/', auth.authenticateToken, async (req, res) => {\r\n  try {\r\n    const subject = new Subject(req.body);\r\n    await subject.save();\r\n    res.status(201).json(subject);\r\n  } catch (error) {\r\n    res.status(500).json({ error: '서버 오류' });\r\n  }\r\n});\r\n\r\nrouter.get('/', auth.authenticateToken, async (req, res) => {\r\n  try {\r\n    const subjects = await Subject.find({ university: req.user.university });\r\n    res.json(subjects);\r\n  } catch (error) {\r\n    res.status(500).json({ error: '서버 오류' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;"],"mappings":";AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,IAAMC,OAAO,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAC5C,IAAMI,IAAI,GAAGJ,OAAO,CAAC,SAAS,CAAC;AAE/BC,MAAM,CAACI,IAAI,CAAC,GAAG,EAAED,IAAI,CAACE,iBAAiB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC3D,IAAI;MACF,IAAMC,OAAO,GAAG,IAAIR,OAAO,CAACM,GAAG,CAACG,IAAI,CAAC;MACrC,MAAMD,OAAO,CAACE,IAAI,CAAC,CAAC;MACpBH,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACJ,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdN,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAQ,CAAC,CAAC;IAC1C;EACF,CAAC;EAAA,iBAAAC,EAAA,EAAAC,GAAA;IAAA,OAAAX,IAAA,CAAAY,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AAEFnB,MAAM,CAACoB,GAAG,CAAC,GAAG,EAAEjB,IAAI,CAACE,iBAAiB;EAAA,IAAAgB,KAAA,GAAAd,iBAAA,CAAE,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC1D,IAAI;MACF,IAAMa,QAAQ,SAASpB,OAAO,CAACqB,IAAI,CAAC;QAAEC,UAAU,EAAEhB,GAAG,CAACiB,IAAI,CAACD;MAAW,CAAC,CAAC;MACxEf,GAAG,CAACK,IAAI,CAACQ,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdN,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAQ,CAAC,CAAC;IAC1C;EACF,CAAC;EAAA,iBAAAW,GAAA,EAAAC,GAAA;IAAA,OAAAN,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AAEFS,MAAM,CAACC,OAAO,GAAG7B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}