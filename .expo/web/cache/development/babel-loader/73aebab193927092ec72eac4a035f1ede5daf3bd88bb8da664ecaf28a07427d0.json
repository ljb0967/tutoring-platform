{"ast":null,"code":"var express = require('express');\nvar mongoose = require('mongoose');\nrequire('dotenv').config();\nvar userRoutes = require('./routes/userRoutes');\nvar subjectRoutes = require('./routes/subjectRoutes');\nvar app = express();\napp.use(express.json());\nmongoose.connect(process.env.MONGODB_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(function () {\n  return console.log('Connected to MongoDB');\n}).catch(function (err) {\n  return console.error('Could not connect to MongoDB', err);\n});\nvar customerSchema = mongoose.Schema({\n  name: \"string\",\n  age: \"number\",\n  gender: \"string\"\n}, {\n  collection: \"newCustomer\"\n});\nvar Customer = mongoose.model(\"Customer\", customerSchema);\nvar customer1 = new Customer({\n  name: \"홍길동\",\n  age: 23,\n  gender: \"남성\"\n});\ncustomer1.save().then(function () {\n  return console.log(\"Customer saved\");\n}).catch(function (err) {\n  return console.error(\"Error saving customer:\", err);\n});\napp.use('/api/users', userRoutes);\napp.use('/api/subjects', subjectRoutes);\nvar PORT = process.env.PORT || 3000;\napp.listen(PORT, function () {\n  return console.log(`Server running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","mongoose","config","userRoutes","subjectRoutes","app","use","json","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","error","customerSchema","Schema","name","age","gender","collection","Customer","model","customer1","save","PORT","listen"],"sources":["C:/startcoding/tutoring-platform/app.js"],"sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\n\r\nconst userRoutes = require('./routes/userRoutes');\r\nconst subjectRoutes = require('./routes/subjectRoutes');\r\n\r\nconst app = express();\r\napp.use(express.json());\r\n\r\nmongoose.connect(process.env.MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n  .then(() => console.log('Connected to MongoDB'))\r\n  .catch(err => console.error('Could not connect to MongoDB', err));\r\n\r\n// #################################################\r\n\r\nconst customerSchema = mongoose.Schema({\r\n  name : \"string\",\r\n    age : \"number\",\r\n    gender : \"string\"\r\n}, {\r\n  collection : \"newCustomer\"\r\n});\r\n\r\nconst Customer = mongoose.model(\"Customer\", customerSchema);\r\n\r\nconst customer1 = new Customer({ name: \"홍길동\", age: 23, gender: \"남성\" });\r\n\r\ncustomer1.save()\r\n  .then(() => console.log(\"Customer saved\"))\r\n  .catch(err => console.error(\"Error saving customer:\", err));\r\n\r\n// ###############################################################\r\n\r\napp.use('/api/users', userRoutes);\r\napp.use('/api/subjects', subjectRoutes);\r\n\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));"],"mappings":"AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpCA,OAAO,CAAC,QAAQ,CAAC,CAACE,MAAM,CAAC,CAAC;AAE1B,IAAMC,UAAU,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AACjD,IAAMI,aAAa,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAEvD,IAAMK,GAAG,GAAGN,OAAO,CAAC,CAAC;AACrBM,GAAG,CAACC,GAAG,CAACP,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC;AAEvBN,QAAQ,CAACO,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,WAAW,EAAE;EAAEC,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC,CAC3FC,IAAI,CAAC;EAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;AAAA,EAAC,CAC/CC,KAAK,CAAC,UAAAC,GAAG;EAAA,OAAIH,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAED,GAAG,CAAC;AAAA,EAAC;AAInE,IAAME,cAAc,GAAGnB,QAAQ,CAACoB,MAAM,CAAC;EACrCC,IAAI,EAAG,QAAQ;EACbC,GAAG,EAAG,QAAQ;EACdC,MAAM,EAAG;AACb,CAAC,EAAE;EACDC,UAAU,EAAG;AACf,CAAC,CAAC;AAEF,IAAMC,QAAQ,GAAGzB,QAAQ,CAAC0B,KAAK,CAAC,UAAU,EAAEP,cAAc,CAAC;AAE3D,IAAMQ,SAAS,GAAG,IAAIF,QAAQ,CAAC;EAAEJ,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAE,EAAE;EAAEC,MAAM,EAAE;AAAK,CAAC,CAAC;AAEtEI,SAAS,CAACC,IAAI,CAAC,CAAC,CACbf,IAAI,CAAC;EAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;AAAA,EAAC,CACzCC,KAAK,CAAC,UAAAC,GAAG;EAAA,OAAIH,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;AAAA,EAAC;AAI7Db,GAAG,CAACC,GAAG,CAAC,YAAY,EAAEH,UAAU,CAAC;AACjCE,GAAG,CAACC,GAAG,CAAC,eAAe,EAAEF,aAAa,CAAC;AAEvC,IAAM0B,IAAI,GAAGrB,OAAO,CAACC,GAAG,CAACoB,IAAI,IAAI,IAAI;AACrCzB,GAAG,CAAC0B,MAAM,CAACD,IAAI,EAAE;EAAA,OAAMf,OAAO,CAACC,GAAG,CAAC,0BAA0Bc,IAAI,EAAE,CAAC;AAAA,EAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}