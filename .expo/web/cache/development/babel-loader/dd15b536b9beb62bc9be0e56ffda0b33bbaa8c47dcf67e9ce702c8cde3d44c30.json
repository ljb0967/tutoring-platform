{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar express = require('express');\nvar router = express.Router();\nvar Review = require('../models/Review');\nvar auth = require('../auth');\nrouter.post('/', auth.authenticateToken, function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    try {\n      var _req$body = req.body,\n        subjectId = _req$body.subjectId,\n        tutorId = _req$body.tutorId,\n        rating = _req$body.rating,\n        comment = _req$body.comment;\n      var review = new Review({\n        userId: req.user.userId,\n        subjectId: subjectId,\n        tutorId: tutorId,\n        rating: rating,\n        comment: comment\n      });\n      yield review.save();\n      res.status(201).json(review);\n    } catch (error) {\n      res.status(500).json({\n        error: '서버 오류'\n      });\n    }\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.get('/subject/:subjectId', auth.authenticateToken, function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    try {\n      var reviews = yield Review.find({\n        subjectId: req.params.subjectId\n      });\n      res.json(reviews);\n    } catch (error) {\n      res.status(500).json({\n        error: '서버 오류'\n      });\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.get('/tutor/:tutorId', auth.authenticateToken, function () {\n  var _ref3 = _asyncToGenerator(function* (req, res) {\n    try {\n      var reviews = yield Review.find({\n        tutorId: req.params.tutorId\n      });\n      res.json(reviews);\n    } catch (error) {\n      res.status(500).json({\n        error: '서버 오류'\n      });\n    }\n  });\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","Review","auth","post","authenticateToken","_ref","_asyncToGenerator","req","res","_req$body","body","subjectId","tutorId","rating","comment","review","userId","user","save","status","json","error","_x","_x2","apply","arguments","get","_ref2","reviews","find","params","_x3","_x4","_ref3","_x5","_x6","module","exports"],"sources":["C:/startcoding/tutoring-platform/routes/reviewRoutes.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Review = require('../models/Review');\r\nconst auth = require('../auth');\r\n\r\n// 리뷰 작성\r\nrouter.post('/', auth.authenticateToken, async (req, res) => {\r\n  try {\r\n    const { subjectId, tutorId, rating, comment } = req.body;\r\n    const review = new Review({\r\n      userId: req.user.userId,\r\n      subjectId,\r\n      tutorId,\r\n      rating,\r\n      comment,\r\n    });\r\n    await review.save();\r\n    res.status(201).json(review);\r\n  } catch (error) {\r\n    res.status(500).json({ error: '서버 오류' });\r\n  }\r\n});\r\n\r\n// 특정 과목에 대한 리뷰 조회\r\nrouter.get('/subject/:subjectId', auth.authenticateToken, async (req, res) => {\r\n  try {\r\n    const reviews = await Review.find({ subjectId: req.params.subjectId });\r\n    res.json(reviews);\r\n  } catch (error) {\r\n    res.status(500).json({ error: '서버 오류' });\r\n  }\r\n});\r\n\r\n// 특정 튜터에 대한 리뷰 조회\r\nrouter.get('/tutor/:tutorId', auth.authenticateToken, async (req, res) => {\r\n  try {\r\n    const reviews = await Review.find({ tutorId: req.params.tutorId });\r\n    res.json(reviews);\r\n  } catch (error) {\r\n    res.status(500).json({ error: '서버 오류' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":";AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,IAAMC,MAAM,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC1C,IAAMI,IAAI,GAAGJ,OAAO,CAAC,SAAS,CAAC;AAG/BC,MAAM,CAACI,IAAI,CAAC,GAAG,EAAED,IAAI,CAACE,iBAAiB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC3D,IAAI;MACF,IAAAC,SAAA,GAAgDF,GAAG,CAACG,IAAI;QAAhDC,SAAS,GAAAF,SAAA,CAATE,SAAS;QAAEC,OAAO,GAAAH,SAAA,CAAPG,OAAO;QAAEC,MAAM,GAAAJ,SAAA,CAANI,MAAM;QAAEC,OAAO,GAAAL,SAAA,CAAPK,OAAO;MAC3C,IAAMC,MAAM,GAAG,IAAId,MAAM,CAAC;QACxBe,MAAM,EAAET,GAAG,CAACU,IAAI,CAACD,MAAM;QACvBL,SAAS,EAATA,SAAS;QACTC,OAAO,EAAPA,OAAO;QACPC,MAAM,EAANA,MAAM;QACNC,OAAO,EAAPA;MACF,CAAC,CAAC;MACF,MAAMC,MAAM,CAACG,IAAI,CAAC,CAAC;MACnBV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACL,MAAM,CAAC;IAC9B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdb,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAQ,CAAC,CAAC;IAC1C;EACF,CAAC;EAAA,iBAAAC,EAAA,EAAAC,GAAA;IAAA,OAAAlB,IAAA,CAAAmB,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AAGF1B,MAAM,CAAC2B,GAAG,CAAC,qBAAqB,EAAExB,IAAI,CAACE,iBAAiB;EAAA,IAAAuB,KAAA,GAAArB,iBAAA,CAAE,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC5E,IAAI;MACF,IAAMoB,OAAO,SAAS3B,MAAM,CAAC4B,IAAI,CAAC;QAAElB,SAAS,EAAEJ,GAAG,CAACuB,MAAM,CAACnB;MAAU,CAAC,CAAC;MACtEH,GAAG,CAACY,IAAI,CAACQ,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdb,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAQ,CAAC,CAAC;IAC1C;EACF,CAAC;EAAA,iBAAAU,GAAA,EAAAC,GAAA;IAAA,OAAAL,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AAGF1B,MAAM,CAAC2B,GAAG,CAAC,iBAAiB,EAAExB,IAAI,CAACE,iBAAiB;EAAA,IAAA6B,KAAA,GAAA3B,iBAAA,CAAE,WAAOC,GAAG,EAAEC,GAAG,EAAK;IACxE,IAAI;MACF,IAAMoB,OAAO,SAAS3B,MAAM,CAAC4B,IAAI,CAAC;QAAEjB,OAAO,EAAEL,GAAG,CAACuB,MAAM,CAAClB;MAAQ,CAAC,CAAC;MAClEJ,GAAG,CAACY,IAAI,CAACQ,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdb,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAQ,CAAC,CAAC;IAC1C;EACF,CAAC;EAAA,iBAAAa,GAAA,EAAAC,GAAA;IAAA,OAAAF,KAAA,CAAAT,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AAEFW,MAAM,CAACC,OAAO,GAAGtC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}